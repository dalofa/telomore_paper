theme(panel.background=element_rect(fill="white"),
plot.background=element_rect(fill="white"),
panel.grid.x=element_blank()) +
geom_hline(yintercept = c(-100,-10,0, 10, 100, 1000,10000), linetype = "dashed", color = "black",
alpha=0.5) +
scale_x_discrete(breaks = plas_breaks, labels = plas_labels) +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
extrachr_p <- ggplot(data=extra_data, aes(x=replicon)) +
geom_bar(aes(y=ONT_ext, fill="ONT_ext"),
stat="identity",
position="identity",
alpha=0.5) +
geom_bar(aes(y=Ill_ext, fill="Ill_ext"),
stat="identity",
position="identity",
alpha=0.5) +
scale_fill_manual(name="Type",
values=c("ONT_ext"="#00868B", "Ill_ext"="#FF6A00"),
labels=c("ONT_ext"="ONT", "Ill_ext"="Illumina")) +
labs(x="Replicon Ends",
y="Basepairs") +
scale_y_continuous(trans = scales::pseudo_log_trans(base = 10),
breaks = c(-100,-10,0,10, 100, 1000, 10000),
labels = abs,
limits = common_limits) +
theme(panel.background=element_rect(fill="white"),
plot.background=element_rect(fill="white"),
panel.grid.x=element_blank(),
plot.caption.position = "panel") +
geom_hline(yintercept = c(-100,-10,0, 10, 100, 1000,10000), linetype = "dashed", color = "black",
alpha=0.5) +
scale_x_discrete(breaks = plas_breaks, labels = plas_labels) +
theme(axis.text.x = element_text(angle = 45, hjust = 1)) +
scale_x_discrete(breaks = extra_breaks, labels = extra_labels) +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
# Arrange plots
library(ggpubr)
fig1 <- ggarrange(chrom_p,
plas_p,
extrachr_p,
labels = c("B) Chromosomes", "C) Plasmids", "D) Extrachr. Elements"),
font.label = list(size = 12, color = "black"),
hjust=0,
ncol = 3,
nrow = 1,
common.legend = TRUE,
align="hv",
legend="bottom")
# fig1 <- annotate_figure(fig1, top = text_grob("Finishline outcomes",
#                color = "black", face = "bold", size = 32))
ggsave("../figures/figure_1_finishline_outcomes_raw.svg",
plot=fig1,
width = 210,
height = 148.5,
units = "mm")
fig1
# For y-contious
common_limits <- c(-200, 100000)
#------------------Juggle data
combined_np <- combined_df |>
filter(data_type=="ONT") |>
mutate(ONT_ext=ext) |>
select(-ext,-data_type)
combined_ill <- combined_df |>
filter(data_type=="Illumina") |>
mutate(Ill_ext=ext) |>
select(-ext,-data_type,-clust_num,-cluster_size)
plot_data <- inner_join(combined_np,
combined_ill,
by=join_by(replicon)) |>
mutate(Ill_ext=-abs(Ill_ext))
# juggle to joing with plot data
rep_to_join <- rep_type|>
mutate(left=str_c(contig_name,"linear_left",sep="_"),
right=str_c(contig_name,"linear_right",sep="_")) |>
select(-contig_name)|>
pivot_longer(cols = left:right, names_to = "temp", values_to = "A") |>
mutate(taxon = rep_type)|>
select(rep_type, A) |>
rename(replicon=A)
plot_data <- inner_join(plot_data,
rep_to_join,
by=join_by(replicon))
write_tsv(x = plot_data,
file = "../tables_and_lists/table_11_ext_by_data_wide.tsv")
# making replicons a factor allows for secondary sorting
chr_data <- plot_data |>
filter(rep_type=="chromosome") |>
arrange(ONT_ext, desc(Ill_ext)) |>
mutate(replicon = factor(replicon, levels = unique(replicon))) |>
mutate(replicon_index = row_number())
# Get tick positions every 100 replicons
chr_breaks <- chr_data$replicon[seq(1, nrow(chr_data), by=100)]
chr_labels <- seq(0, length(chr_breaks) * 100 - 100, by=100)
# Make subset for each plot
plas_data <- plot_data |>
filter(rep_type=="plasmid") |>
arrange(ONT_ext, desc(Ill_ext)) |>
mutate(replicon = factor(replicon, levels = unique(replicon))) |>
mutate(replicon_index = row_number())  # get number for breaks and labels
# Get tick positions every 100 replicons
plas_breaks <- plas_data$replicon[seq(1, nrow(plas_data), by=100)]
plas_labels <- seq(0, length(plas_breaks) * 100 - 100, by=100)
extra_data <- plot_data |>
filter(rep_type=="extrachromosomal") |>
arrange(ONT_ext, desc(Ill_ext)) |>
mutate(replicon = factor(replicon, levels = unique(replicon)))
extra_breaks <- extra_data$replicon[seq(1, nrow(extra_data), by=50)]
extra_labels <- seq(0, length(extra_breaks) * 50 - 50, by=50)
#-----------------------GENERATE PLOTS WITH NO FILTERING ON CLUSTER NUMBER
chrom_p <- ggplot(data=chr_data, aes(x=reorder(replicon, abs(ONT_ext)))) +
geom_bar(aes(y=ONT_ext, fill="ONT_ext"),
stat="identity",
position="identity",
alpha=0.5) +
geom_bar(aes(y=Ill_ext, fill="Ill_ext"),
stat="identity",
position="identity",
alpha=0.5) +
scale_fill_manual(name="Type",
values=c("ONT_ext"="#00868B", "Ill_ext"="#FF6A00"),
labels=c("ONT_ext"="ONT", "Ill_ext"="Illumina")) +
labs(x="Replicon Ends",
y="Basepairs") +
scale_y_continuous(trans = pseudo_log_trans(base = 10),
breaks = c(-100,-10,0,10, 100, 1000, 10000),
labels = abs,
limits = common_limits) +
theme(panel.background=element_rect(fill="white"),
plot.background=element_rect(fill="white"),
pplot.grid.x=element_blank()) +   # Hides x-axis labels
geom_hline(yintercept = c(-100,-10,0, 10, 100, 1000,10000), linetype = "dashed", color = "black",
alpha=0.5) +
scale_x_discrete(breaks = chr_breaks, labels = chr_labels) +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
plas_p <- ggplot(data=plas_data, aes(x=replicon)) +
geom_bar(aes(y=ONT_ext, fill="ONT_ext"),
stat="identity",
position="identity",
alpha=0.5) +
geom_bar(aes(y=Ill_ext, fill="Ill_ext"),
stat="identity",
position="identity",
alpha=0.5) +
scale_fill_manual(name="Type",
values=c("ONT_ext"="#00868B", "Ill_ext"="#FF6A00"),
labels=c("ONT_ext"="ONT", "Ill_ext"="Illumina")) +
labs(x="Replicon Ends",
y="Basepairs") +
scale_y_continuous(trans = scales::pseudo_log_trans(base = 10),
breaks = c(-100,-10,0,10, 100, 1000, 10000),
labels = abs,
limits = common_limits) +
theme(panel.background=element_rect(fill="white"),
plot.background=element_rect(fill="white"),
panel.grid.x=element_blank()) +
geom_hline(yintercept = c(-100,-10,0, 10, 100, 1000,10000), linetype = "dashed", color = "black",
alpha=0.5) +
scale_x_discrete(breaks = plas_breaks, labels = plas_labels) +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
extrachr_p <- ggplot(data=extra_data, aes(x=replicon)) +
geom_bar(aes(y=ONT_ext, fill="ONT_ext"),
stat="identity",
position="identity",
alpha=0.5) +
geom_bar(aes(y=Ill_ext, fill="Ill_ext"),
stat="identity",
position="identity",
alpha=0.5) +
scale_fill_manual(name="Type",
values=c("ONT_ext"="#00868B", "Ill_ext"="#FF6A00"),
labels=c("ONT_ext"="ONT", "Ill_ext"="Illumina")) +
labs(x="Replicon Ends",
y="Basepairs") +
scale_y_continuous(trans = scales::pseudo_log_trans(base = 10),
breaks = c(-100,-10,0,10, 100, 1000, 10000),
labels = abs,
limits = common_limits) +
theme(panel.background=element_rect(fill="white"),
plot.background=element_rect(fill="white"),
panel.grid.x=element_blank(),
plot.caption.position = "panel") +
geom_hline(yintercept = c(-100,-10,0, 10, 100, 1000,10000), linetype = "dashed", color = "black",
alpha=0.5) +
scale_x_discrete(breaks = plas_breaks, labels = plas_labels) +
theme(axis.text.x = element_text(angle = 45, hjust = 1)) +
scale_x_discrete(breaks = extra_breaks, labels = extra_labels) +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
# Arrange plots
library(ggpubr)
fig1 <- ggarrange(chrom_p,
plas_p,
labels = c("Chromosomes", "Plasmids"),
font.label = list(size = 12, color = "black"),
hjust=0,
ncol = 3,
nrow = 1,
common.legend = TRUE,
align="hv",
legend="bottom")
# fig1 <- annotate_figure(fig1, top = text_grob("Finishline outcomes",
#                color = "black", face = "bold", size = 32))
ggsave("../figures/figure_1__for_poster_finishline_outcomes_raw.svg",
plot=fig1,
width = 210,
height = 148.5,
units = "mm")
fig1
# For y-contious
common_limits <- c(-200, 100000)
#------------------Juggle data
combined_np <- combined_df |>
filter(data_type=="ONT") |>
mutate(ONT_ext=ext) |>
select(-ext,-data_type)
combined_ill <- combined_df |>
filter(data_type=="Illumina") |>
mutate(Ill_ext=ext) |>
select(-ext,-data_type,-clust_num,-cluster_size)
plot_data <- inner_join(combined_np,
combined_ill,
by=join_by(replicon)) |>
mutate(Ill_ext=-abs(Ill_ext))
# juggle to joing with plot data
rep_to_join <- rep_type|>
mutate(left=str_c(contig_name,"linear_left",sep="_"),
right=str_c(contig_name,"linear_right",sep="_")) |>
select(-contig_name)|>
pivot_longer(cols = left:right, names_to = "temp", values_to = "A") |>
mutate(taxon = rep_type)|>
select(rep_type, A) |>
rename(replicon=A)
plot_data <- inner_join(plot_data,
rep_to_join,
by=join_by(replicon))
write_tsv(x = plot_data,
file = "../tables_and_lists/table_11_ext_by_data_wide.tsv")
# making replicons a factor allows for secondary sorting
chr_data <- plot_data |>
filter(rep_type=="chromosome") |>
arrange(ONT_ext, desc(Ill_ext)) |>
mutate(replicon = factor(replicon, levels = unique(replicon))) |>
mutate(replicon_index = row_number())
# Get tick positions every 100 replicons
chr_breaks <- chr_data$replicon[seq(1, nrow(chr_data), by=100)]
chr_labels <- seq(0, length(chr_breaks) * 100 - 100, by=100)
# Make subset for each plot
plas_data <- plot_data |>
filter(rep_type=="plasmid") |>
arrange(ONT_ext, desc(Ill_ext)) |>
mutate(replicon = factor(replicon, levels = unique(replicon))) |>
mutate(replicon_index = row_number())  # get number for breaks and labels
# Get tick positions every 100 replicons
plas_breaks <- plas_data$replicon[seq(1, nrow(plas_data), by=100)]
plas_labels <- seq(0, length(plas_breaks) * 100 - 100, by=100)
extra_data <- plot_data |>
filter(rep_type=="extrachromosomal") |>
arrange(ONT_ext, desc(Ill_ext)) |>
mutate(replicon = factor(replicon, levels = unique(replicon)))
extra_breaks <- extra_data$replicon[seq(1, nrow(extra_data), by=50)]
extra_labels <- seq(0, length(extra_breaks) * 50 - 50, by=50)
#-----------------------GENERATE PLOTS WITH NO FILTERING ON CLUSTER NUMBER
chrom_p <- ggplot(data=chr_data, aes(x=reorder(replicon, abs(ONT_ext)))) +
geom_bar(aes(y=ONT_ext, fill="ONT_ext"),
stat="identity",
position="identity",
alpha=0.5) +
geom_bar(aes(y=Ill_ext, fill="Ill_ext"),
stat="identity",
position="identity",
alpha=0.5) +
scale_fill_manual(name="Type",
values=c("ONT_ext"="#00868B", "Ill_ext"="#FF6A00"),
labels=c("ONT_ext"="ONT", "Ill_ext"="Illumina")) +
labs(x="Replicon Ends",
y="Basepairs") +
scale_y_continuous(trans = pseudo_log_trans(base = 10),
breaks = c(-100,-10,0,10, 100, 1000, 10000),
labels = abs,
limits = common_limits) +
theme(panel.background=element_rect(fill="white"),
plot.background=element_rect(fill="white"),
pplot.grid.x=element_blank()) +   # Hides x-axis labels
geom_hline(yintercept = c(-100,-10,0, 10, 100, 1000,10000), linetype = "dashed", color = "black",
alpha=0.5) +
scale_x_discrete(breaks = chr_breaks, labels = chr_labels) +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
plas_p <- ggplot(data=plas_data, aes(x=replicon)) +
geom_bar(aes(y=ONT_ext, fill="ONT_ext"),
stat="identity",
position="identity",
alpha=0.5) +
geom_bar(aes(y=Ill_ext, fill="Ill_ext"),
stat="identity",
position="identity",
alpha=0.5) +
scale_fill_manual(name="Type",
values=c("ONT_ext"="#00868B", "Ill_ext"="#FF6A00"),
labels=c("ONT_ext"="ONT", "Ill_ext"="Illumina")) +
labs(x="Replicon Ends",
y="Basepairs") +
scale_y_continuous(trans = scales::pseudo_log_trans(base = 10),
breaks = c(-100,-10,0,10, 100, 1000, 10000),
labels = abs,
limits = common_limits) +
theme(panel.background=element_rect(fill="white"),
plot.background=element_rect(fill="white"),
panel.grid.x=element_blank()) +
geom_hline(yintercept = c(-100,-10,0, 10, 100, 1000,10000), linetype = "dashed", color = "black",
alpha=0.5) +
scale_x_discrete(breaks = plas_breaks, labels = plas_labels) +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
extrachr_p <- ggplot(data=extra_data, aes(x=replicon)) +
geom_bar(aes(y=ONT_ext, fill="ONT_ext"),
stat="identity",
position="identity",
alpha=0.5) +
geom_bar(aes(y=Ill_ext, fill="Ill_ext"),
stat="identity",
position="identity",
alpha=0.5) +
scale_fill_manual(name="Type",
values=c("ONT_ext"="#00868B", "Ill_ext"="#FF6A00"),
labels=c("ONT_ext"="ONT", "Ill_ext"="Illumina")) +
labs(x="Replicon Ends",
y="Basepairs") +
scale_y_continuous(trans = scales::pseudo_log_trans(base = 10),
breaks = c(-100,-10,0,10, 100, 1000, 10000),
labels = abs,
limits = common_limits) +
theme(panel.background=element_rect(fill="white"),
plot.background=element_rect(fill="white"),
panel.grid.x=element_blank(),
plot.caption.position = "panel") +
geom_hline(yintercept = c(-100,-10,0, 10, 100, 1000,10000), linetype = "dashed", color = "black",
alpha=0.5) +
scale_x_discrete(breaks = plas_breaks, labels = plas_labels) +
theme(axis.text.x = element_text(angle = 45, hjust = 1)) +
scale_x_discrete(breaks = extra_breaks, labels = extra_labels) +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
# Arrange plots
library(ggpubr)
fig1 <- ggarrange(chrom_p,
plas_p,
labels = c("Chromosomes", "Plasmids"),
font.label = list(size = 12, color = "black"),
hjust=0,
ncol = 2,
nrow = 1,
common.legend = TRUE,
align="hv",
legend="bottom")
# fig1 <- annotate_figure(fig1, top = text_grob("Finishline outcomes",
#                color = "black", face = "bold", size = 32))
ggsave("../figures/figure_1__for_poster_finishline_outcomes_raw.svg",
plot=fig1,
width = 210,
height = 148.5,
units = "mm")
fig1
# For y-contious
common_limits <- c(-200, 100000)
#------------------Juggle data
combined_np <- combined_df |>
filter(data_type=="ONT") |>
mutate(ONT_ext=ext) |>
select(-ext,-data_type)
combined_ill <- combined_df |>
filter(data_type=="Illumina") |>
mutate(Ill_ext=ext) |>
select(-ext,-data_type,-clust_num,-cluster_size)
plot_data <- inner_join(combined_np,
combined_ill,
by=join_by(replicon)) |>
mutate(Ill_ext=-abs(Ill_ext))
# juggle to joing with plot data
rep_to_join <- rep_type|>
mutate(left=str_c(contig_name,"linear_left",sep="_"),
right=str_c(contig_name,"linear_right",sep="_")) |>
select(-contig_name)|>
pivot_longer(cols = left:right, names_to = "temp", values_to = "A") |>
mutate(taxon = rep_type)|>
select(rep_type, A) |>
rename(replicon=A)
plot_data <- inner_join(plot_data,
rep_to_join,
by=join_by(replicon))
write_tsv(x = plot_data,
file = "../tables_and_lists/table_11_ext_by_data_wide.tsv")
# making replicons a factor allows for secondary sorting
chr_data <- plot_data |>
filter(rep_type=="chromosome") |>
arrange(ONT_ext, desc(Ill_ext)) |>
mutate(replicon = factor(replicon, levels = unique(replicon))) |>
mutate(replicon_index = row_number())
# Get tick positions every 100 replicons
chr_breaks <- chr_data$replicon[seq(1, nrow(chr_data), by=100)]
chr_labels <- seq(0, length(chr_breaks) * 100 - 100, by=100)
# Make subset for each plot
plas_data <- plot_data |>
filter(rep_type=="plasmid") |>
arrange(ONT_ext, desc(Ill_ext)) |>
mutate(replicon = factor(replicon, levels = unique(replicon))) |>
mutate(replicon_index = row_number())  # get number for breaks and labels
# Get tick positions every 100 replicons
plas_breaks <- plas_data$replicon[seq(1, nrow(plas_data), by=100)]
plas_labels <- seq(0, length(plas_breaks) * 100 - 100, by=100)
extra_data <- plot_data |>
filter(rep_type=="extrachromosomal") |>
arrange(ONT_ext, desc(Ill_ext)) |>
mutate(replicon = factor(replicon, levels = unique(replicon)))
extra_breaks <- extra_data$replicon[seq(1, nrow(extra_data), by=50)]
extra_labels <- seq(0, length(extra_breaks) * 50 - 50, by=50)
#-----------------------GENERATE PLOTS WITH NO FILTERING ON CLUSTER NUMBER
chrom_p <- ggplot(data=chr_data, aes(x=reorder(replicon, abs(ONT_ext)))) +
geom_bar(aes(y=ONT_ext, fill="ONT_ext"),
stat="identity",
position="identity",
alpha=0.5) +
geom_bar(aes(y=Ill_ext, fill="Ill_ext"),
stat="identity",
position="identity",
alpha=0.5) +
scale_fill_manual(name="Type",
values=c("ONT_ext"="#00868B", "Ill_ext"="#FF6A00"),
labels=c("ONT_ext"="ONT", "Ill_ext"="Illumina")) +
labs(x="Replicon Ends",
y="Basepairs") +
scale_y_continuous(trans = pseudo_log_trans(base = 10),
breaks = c(-100,-10,0,10, 100, 1000, 10000),
labels = abs,
limits = common_limits) +
theme(panel.background=element_rect(fill="white"),
plot.background=element_rect(fill="white"),
pplot.grid.x=element_blank()) +   # Hides x-axis labels
geom_hline(yintercept = c(-100,-10,0, 10, 100, 1000,10000), linetype = "dashed", color = "black",
alpha=0.5) +
scale_x_discrete(breaks = chr_breaks, labels = chr_labels) +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
plas_p <- ggplot(data=plas_data, aes(x=replicon)) +
geom_bar(aes(y=ONT_ext, fill="ONT_ext"),
stat="identity",
position="identity",
alpha=0.5) +
geom_bar(aes(y=Ill_ext, fill="Ill_ext"),
stat="identity",
position="identity",
alpha=0.5) +
scale_fill_manual(name="Type",
values=c("ONT_ext"="#00868B", "Ill_ext"="#FF6A00"),
labels=c("ONT_ext"="ONT", "Ill_ext"="Illumina")) +
labs(x="Replicon Ends",
y="Basepairs") +
scale_y_continuous(trans = scales::pseudo_log_trans(base = 10),
breaks = c(-100,-10,0,10, 100, 1000, 10000),
labels = abs,
limits = common_limits) +
theme(panel.background=element_rect(fill="white"),
plot.background=element_rect(fill="white"),
panel.grid.x=element_blank()) +
geom_hline(yintercept = c(-100,-10,0, 10, 100, 1000,10000), linetype = "dashed", color = "black",
alpha=0.5) +
scale_x_discrete(breaks = plas_breaks, labels = plas_labels) +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
extrachr_p <- ggplot(data=extra_data, aes(x=replicon)) +
geom_bar(aes(y=ONT_ext, fill="ONT_ext"),
stat="identity",
position="identity",
alpha=0.5) +
geom_bar(aes(y=Ill_ext, fill="Ill_ext"),
stat="identity",
position="identity",
alpha=0.5) +
scale_fill_manual(name="Type",
values=c("ONT_ext"="#00868B", "Ill_ext"="#FF6A00"),
labels=c("ONT_ext"="ONT", "Ill_ext"="Illumina")) +
labs(x="Replicon Ends",
y="Basepairs") +
scale_y_continuous(trans = scales::pseudo_log_trans(base = 10),
breaks = c(-100,-10,0,10, 100, 1000, 10000),
labels = abs,
limits = common_limits) +
theme(panel.background=element_rect(fill="white"),
plot.background=element_rect(fill="white"),
panel.grid.x=element_blank(),
plot.caption.position = "panel") +
geom_hline(yintercept = c(-100,-10,0, 10, 100, 1000,10000), linetype = "dashed", color = "black",
alpha=0.5) +
scale_x_discrete(breaks = plas_breaks, labels = plas_labels) +
theme(axis.text.x = element_text(angle = 45, hjust = 1)) +
scale_x_discrete(breaks = extra_breaks, labels = extra_labels) +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
# Arrange plots
library(ggpubr)
fig1 <- ggarrange(chrom_p,
plas_p,
labels = c("Chromosomes", "Plasmids"),
font.label = list(size = 12, color = "black"),
hjust=0,
ncol = 2,
nrow = 1,
common.legend = TRUE,
align="hv",
legend="bottom")
# fig1 <- annotate_figure(fig1, top = text_grob("Finishline outcomes",
#                color = "black", face = "bold", size = 32))
ggsave("../figures/figure_1__for_poster_finishline_outcomes_raw.png",
plot=fig1,
width = 210,
height = 148.5,
units = "mm")
fig1
